TestCase subclass: #AlgoFixTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixTest methodsFor: 'running' stamp: 'Fer 5/22/2020 17:35'!setUp	precision := 0.001! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test01PresupuestoPintorUtilizaPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba  presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda 2 horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva 4 litros de pintura	"	"Pinturas:		- Alba   requiere '1' mano con pincel y '1' mano con rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test03PresupuestoPintorUtilizaRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test02PresupuestoPintoresUtilizandoPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura	"		"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 450.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 150 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(10 "M2" * 2 "horas" * 450 "Precio" * 1 "manos") 		masMateriales: 			(10 "M2" * 4 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test07PresupuestoPinteoresConPincelUtilizanDiferentesPinturasHacenDescuendoDel50PorcientoEnMoCuandoM2EsMayor40EntoncesOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConAlba |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 600.	algoFix registrarPintorDeRodillo: 'Tomas' conValorHora: 4000.	venier := algoFix crearConNombre: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 55 conPintura: venier.		"El descuento del %50 lo hacen los pintores con pincel!!"	valorEsperadoConAlba := algoFix  		manoDeObra: 			(55 "M2" * 2 "horas" * 500 "Precio" * 2 "manos" * 0.5) 		masMateriales: 			(55 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperadoConAlba closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test05PresupuestoPinteoresConPincelRodilloOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 800.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 20 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(20 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(20 "M2" * 4 "litros" * 340 "Precio" * 1 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test06PresupuestoPinteoresConPincelUtilizanDiferentesPinturasOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Martin' conValorHora: 500.	algoFix registrarPintorDePincel: 'Sebastian' conValorHora: 600.	venier := algoFix crearConNombre: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 15 conPintura: venier.		valorEsperadoConVenier := algoFix 		manoDeObra: 			(15 "M2" * 2 "horas" * 500 "Precio" * 2 "manos") 		masMateriales: 			(15 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	self assert: 'Martin' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test04PresupuestoPintoresUtilizandoRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Eugenio' conValorHora: 130.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 20 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 130 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 20 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test08PresupuestoConTecnicaPincel	| algoFix alba venier presupuesto valorEsperadoConAlba valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Edson' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Pablo' conValorHora: 800.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	venier := algoFix crearConNombre: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperadoConAlba := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConAlba closeTo: (presupuesto valor) precision: precision.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: venier.	valorEsperadoConVenier := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !TestCase subclass: #AlgoFixUnit	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test12PintorDeRodilloCalculaManoDeObraConPinturaAlbaNoHaceDescuentoPor10Metros	|pintor rodillo algoFix alba valorEsperado material|	rodillo := Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		material := pintor calcularManoDeObra: 10 conPintura: alba .		valorEsperado := 	(10 "M2" * 2 "horas" * 300 "Precio" * 1 "manos").		self assert: material equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test07PintorDePincelCalculaMaterialConPinturaAlbaParaNoHaceDescuentoPor70Metros	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularMaterial: 70 conPintura: alba .		valorEsperado := (70 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test10PintorDePincelCalculaManoDeObraConPinturaAlbaNoHaceDescuentoPor10Metros	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularManoDeObra: 10 conPintura: alba .		valorEsperado := (10 "M2" * 2 "horas" * 300 "Precio" * 1 "manos").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test04PintorDeRodilloCalculaCostoConPinturaAlbaNoHaceDescuentoPor70Metros	|pintor rodillo algoFix alba valorEsperado costos|	rodillo := Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularCostos: 70 conPintura: alba .		valorEsperado := algoFix		manoDeObra: 			(70 "M2" * 2 "horas" * 300 "Precio" * 1 "manos")		masMateriales: 			(70 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test14CreoPinturaCalculaCostoManoDeObraPara5HDeTrabajoDeRodillo	|algoFix alba costo valorEsperado|		algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	costo := alba calcularManoDeObraRodillo: 5 "horas".	valorEsperado := 1 "manosRodillo" * 5 "horas".	self assert: costo equals: valorEsperado ! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test06PintorDePincelCalculaMaterialConPinturaAlbaParaNoHaceDescuentoPor10Metros	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularMaterial: 10 conPintura: alba .		valorEsperado := (10 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test09PintorDeRodilloCalculaMaterialConPinturaAlbaNoHaceDescuentoPor70Metros	|pintor rodillo algoFix alba valorEsperado material|	rodillo := Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		material := pintor calcularMaterial: 70 conPintura: alba .		valorEsperado := 	(70 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: material equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test21AgregoDosVecesPintorPincelConIgualNombreYDiferentevalorHoraPresupuestoDevuelveElUltimoIngresadoalSistema	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 800.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 20 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(20 "M2" * 2 "horas" * 800 "Precio" * 1 "manos") 		masMateriales: 			(20 "M2" * 4 "litros" * 340 "Precio" * 1 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test02PintorDeRodilloCalculaCostoConPinturaAlba	|pintor rodillo algoFix alba valorEsperado costos|	rodillo :=	Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularCostos: 10 conPintura: alba .		valorEsperado := algoFix		manoDeObra: 			(10 "M2" * 2 "horas" * 300 "Precio" * 1 "manos") 		masMateriales: 			(10 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test13PintorDeRodilloCalculaManoDeObraConPinturaAlbaNoHaceDescuentoPor70Metros	|pintor rodillo algoFix alba valorEsperado material|	rodillo := Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		material := pintor calcularManoDeObra: 70 conPintura: alba .		valorEsperado := 	(70 "M2" * 2 "horas" * 300 "Precio" * 1 "manos").		self assert: material equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test11PintorDePincelCalculaManoDeObraConPinturaAlbaHaceDescuentoPor70Metros	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularManoDeObra: 70 conPintura: alba .		valorEsperado := (70 "M2" * 2 "horas" * 300 "Precio" * 1 "manos"*0.50 "descuento").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test01PintorDePincelCalculaCostoConPinturaAlba	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularCostos: 10 conPintura: alba .		valorEsperado := algoFix		manoDeObra: 			(10 "M2" * 2 "horas" * 300 "Precio" * 1 "manos") 		masMateriales: 			(10 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: 	valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test15CreoPinturaCalculaCostoManoDeObraPara5HDeTrabajoDePincel	|algoFix alba costo valorEsperado|	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	costo := alba calcularManoDeObraPincel: 5 "horas".	valorEsperado := 1 "manoPincel" * 5 "horas".	self assert: costo equals: valorEsperado ! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:23'!test08PintorDeRodilloCalculaMaterialConPinturaAlbaNoHaceDescuentoPor10Metros	|pintor rodillo algoFix alba valorEsperado material|	rodillo := Rodillo crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: rodillo.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		material := pintor calcularMaterial: 10 conPintura: alba .		valorEsperado := 	(10 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: material equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 16:50'!test20PresupuestoMasBaratoDevuelveElPresupuestoMasBaratoDisponible	|resultadoTest presupuestoMasBarato|		resultadoTest := Dictionary new. 	resultadoTest at: 'Fernanda' put: 19000.	resultadoTest at: 'Luis' put: 20000.		presupuestoMasBarato := PresupuestoMasBarato con: resultadoTest.		self assert: (presupuestoMasBarato valor) equals: 19000.	self assert: (presupuestoMasBarato responsable) equals: 'Fernanda'.! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 16:50'!test19PresupuestoMasBaratoNoRecibePresupuestosYDebeLanzarExcepcion	|presupuesto|	presupuesto:= Dictionary new.	self should: [PresupuestoMasBarato con: presupuesto] raise: PresupuestosVacioError.	! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test22AgregoDosVecesPintorPincelConIgualNombreEIgualValorHoraDevuelvePresupuestoDeNombreAlfabeticamenteMenor	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDePincel: 'Fernanda' conValorHora: 500.	algoFix registrarPintorDePincel: 'Ana' conValorHora: 500.		alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 20 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(20 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(20 "M2" * 4 "litros" * 340 "Precio" * 1 "manos").	self assert: 'Ana' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 16:51'!test17CreoPinturaCalculaCostoMaterialParaUnCostoDe500ConPincel	|algoFix alba costo valorEsperado|	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 5 manosRodillo: 1.	costo := alba calcularMaterialPincel: 500 "de costo".	valorEsperado := 200 "precioLitro" * 5 "manosPincel" * 500 "unCosto".	self assert: costo equals: valorEsperado ! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:21'!test16CreoPinturaCalculaCostoMaterialParaUnCostoDe500ConRodillo	|algoFix alba costo valorEsperado|		algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 5.	costo := alba calcularMaterialRodillo: 500 "de costo".	valorEsperado := 200 "precioLitro" * 5 "manosRodillo" * 500 "unCosto".	self assert: costo equals: valorEsperado ! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test03PintorDePincelCalculaCostoConPinturaAlbaHaceDescuentoPor70Metros	|pintor pincel algoFix alba valorEsperado costos|	pincel :=	 Pincel crearConTiempoPintarUnM2: 2 yUnConsumo: 4.	pintor := Pintor crearConNombre: 'Fernanda' conValorHora: 300 yHerramientaDeTrabajo: pincel.	algoFix := AlgoFix new.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.		costos := pintor calcularCostos: 70 conPintura: alba .		valorEsperado := algoFix		manoDeObra: 			(70 "M2" * 2 "horas" * 300 "Precio" * 1 "manos"* 0.50 "descuento")		masMateriales: 			(70 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: costos equals: valorEsperado .! !!AlgoFixUnit methodsFor: 'tests' stamp: 'Fer 5/28/2020 15:22'!test18RegistroDosPintoresYGeneroPresupuestosDeberiaGenerarDosPresupuestos	|algoFix  alba  pintores  resultado resultadoTest| 		algoFix :=AlgoFix new.	algoFix 	registrarPintorDeRodillo: 'Fernanda' conValorHora: 200.	algoFix 	registrarPintorDeRodillo: 'Luis' conValorHora: 300.	alba := algoFix crearConNombre: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	pintores := algoFix pintores.		resultadoTest := Dictionary new. 	resultadoTest at: 'Fernanda' put: 19000.	resultadoTest at: 'Luis' put: 20000.	resultado := Presupuestos crearConPintores: pintores conPintura: alba yconMetros: 10.	self assert: (resultado ) equals: resultadoTest.	! !