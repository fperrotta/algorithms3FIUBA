Object subclass: #AlgoFix	instanceVariableNames: 'pinturas pintores presupuestos'	classVariableNames: ''	package: 'TP1-Model'!!AlgoFix methodsFor: 'registering' stamp: 'Fer 5/20/2020 00:12'!registrarPintorDePincel: unNombrePintorPincel conValorHora: unValorHora|pintorPincel|	pintorPincel:= PintorPincel new .	pintorPincel setNombre: unNombrePintorPincel.	pintorPincel setValorHora: unValorHora .	pintorPincel setTiempoPintarM2: 2.	pintores at: unNombrePintorPincel put: pintorPincel.	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'Fer 5/19/2020 23:40'!elegirPresupuestoMasBarato	|minValor pintorMinPresupuesto instanciaPresupuesto| 	minValor := (presupuestos values) min.	pintorMinPresupuesto := (presupuestos keyAtValue: minValor) .	instanciaPresupuesto := Presupuesto new.	instanciaPresupuesto guardarPintor: pintorMinPresupuesto conValorMinimo: minValor.	^instanciaPresupuesto.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'Fer 5/19/2020 23:49'!registrarPintorDeRodillo: unNombrePintorRodillo conValorHora: unValorHora	|pintorRodillo|	pintorRodillo := PintorRodillo new .	pintorRodillo setNombre: unNombrePintorRodillo.	pintorRodillo setValorHora: unValorHora .	pintorRodillo setTiempoPintarM2: 1.	pintores at: unNombrePintorRodillo put: pintorRodillo.	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:06'!presupuestoMasBaratoParaPintarMetrosCuadrados: metros2 conPintura: unaInstanciaPintura 	presupuestos := pintores collect: [ :pintor | pintor generarPresupuesto: metros2 conPintura: unaInstanciaPintura ].	^ self elegirPresupuestoMasBarato.! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:11'!manoDeObra: costoManoDeObra masMateriales: costoMaterial	^costoManoDeObra+costoMaterial.! !!AlgoFix methodsFor: 'creating' stamp: 'Fer 5/20/2020 00:11'!crearPintura: unNombrePintura conPrecioPorLitro: unPrecioLitro manosPincel: manosPincel manosRodillo: manosRodillo	|pintura|	pintura := Pintura new.	pintura setNombre: unNombrePintura.	pintura setPrecioLitro: unPrecioLitro.	pintura setManosPincel: manosPincel.	pintura setManosRodillo: manosRodillo.	pintura setConsumoM2Pincel: 4.	pintura setConsumoM2Rodillo: 5.	pinturas at: unNombrePintura put: pintura.	^pintura.	! !!AlgoFix methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:46'!initialize	pinturas := Dictionary new. 	pintores := Dictionary new.	presupuestos := Dictionary new.! !Object subclass: #Pintor	instanceVariableNames: 'nombre valorHora'	classVariableNames: ''	package: 'TP1-Model'!!Pintor methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:15'!initilize	nombre := String.	valorHora:= Integer.! !!Pintor methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:27'!generarPresupuesto: metros2 conPintura: unaInstanciaPintura 	self subclassResponsibility ! !!Pintor methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:22'!setNombre: unNombre	nombre:=unNombre .! !!Pintor methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:22'!setValorHora: unValorHora 	valorHora := unValorHora .! !Pintor subclass: #PintorPincel	instanceVariableNames: 'tiempoPintarM2'	classVariableNames: ''	package: 'TP1-Model'!!PintorPincel methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:23'!setTiempoPintarM2: unTiempo	tiempoPintarM2:= unTiempo.! !!PintorPincel methodsFor: 'as yet unclassified' stamp: 'Fer 5/19/2020 23:50'!calcularCostosCon: metros2 conPintura: unaInstanciaPintura	|materiales manoDeObra|	materiales := unaInstanciaPintura calcularMaterialPincel: metros2.	manoDeObra:= metros2 * tiempoPintarM2  * valorHora  * (unaInstanciaPintura getManosPincel). 	^ materiales + manoDeObra.! !!PintorPincel methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:06'!generarPresupuesto: metros2 conPintura: unaInstanciaPintura 	(metros2 <40 )	ifTrue: [			^ self calcularCostosCon:metros2  conPintura:unaInstanciaPintura.]	ifFalse: [ 			^ (self calcularCostosConDescuento:metros2  conPintura:unaInstanciaPintura) .].	! !!PintorPincel methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:09'!calcularCostosConDescuento: metros2 conPintura: unaInstanciaPintura	|materiales manoDeObra|	materiales := unaInstanciaPintura calcularMaterialPincel: metros2.	manoDeObra:= metros2 * tiempoPintarM2  * valorHora  * (unaInstanciaPintura getManosPincel). 	^ materiales + (manoDeObra * 0.5).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PintorPincel class	instanceVariableNames: ''!!PintorPincel class methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:22'!inicializarPintorPincel: unNombrePintorPincel conValorHora: unValorHora conTiempoPintarM2: unTiempo	| pintorpincel |	pintorpincel:= self new.	pintorpincel setNombre: unNombrePintorPincel .		pintorpincel setValorHora: unValorHora .	pintorpincel setTiempoPintarM2: unTiempo.	^ pintorpincel.! !Pintor subclass: #PintorRodillo	instanceVariableNames: 'tiempoPintarM2'	classVariableNames: ''	package: 'TP1-Model'!!PintorRodillo methodsFor: 'initialization' stamp: 'Fernanda 5/19/2020 23:16'!setTiempoPintarM2: unTiempo	tiempoPintarM2:= unTiempo.! !!PintorRodillo methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/19/2020 23:17'!generarPresupuesto: metros2 conPintura: unaInstanciaPintura 	|materiales manoDeObra|	materiales := unaInstanciaPintura calcularMaterialRodillo: metros2.	manoDeObra:= metros2 * tiempoPintarM2  * valorHora  * (unaInstanciaPintura getManosRodillo). 	^ materiales + manoDeObra.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PintorRodillo class	instanceVariableNames: ''!!PintorRodillo class methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/19/2020 23:18'!inicializarPintorRodillo: unNombrePintorRodillo conValorHora: unValorHora conTiempoPintarM2: unTiempo	| pintorrodillo |	pintorrodillo:= self new.	pintorrodillo setNombre: unNombrePintorRodillo .		pintorrodillo setValorHora: unValorHora .	pintorrodillo setTiempoPintarM2: unTiempo.	^ pintorrodillo.! !Object subclass: #Pintura	instanceVariableNames: 'nombrePintura precioLitro manosPincel manosRodillo consumoPincelM2 consumoRodilloM2'	classVariableNames: ''	package: 'TP1-Model'!!Pintura methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:30'!calcularMaterialPincel: metros2	^ metros2 * consumoPincelM2  * precioLitro  * manosPincel .! !!Pintura methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/18/2020 19:31'!getManosPincel^ manosPincel .! !!Pintura methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/19/2020 23:17'!getManosRodillo^ manosRodillo .! !!Pintura methodsFor: 'as yet unclassified' stamp: 'Fernanda 5/19/2020 23:17'!calcularMaterialRodillo: metros2	^ metros2 * consumoRodilloM2  * precioLitro  * manosRodillo  .! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:08'!setManosPincel: cantidadManosPincel	manosPincel:= cantidadManosPincel. ! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:08'!setManosRodillo: cantidaManosRodillo	manosRodillo := cantidaManosRodillo.	! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:07'!setNombre: unNombrePintura nombrePintura:=	unNombrePintura.	! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:09'!setConsumoM2Pincel: consumo	consumoPincelM2:= consumo.	! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:07'!setPrecioLitro: unPrecioLitroprecioLitro:= 	unPrecioLitro. 	! !!Pintura methodsFor: 'initialization' stamp: 'Fernanda 5/18/2020 19:10'!setConsumoM2Rodillo: consumo 	consumoRodilloM2:= consumo.! !Object subclass: #Presupuesto	instanceVariableNames: 'nombre valor'	classVariableNames: ''	package: 'TP1-Model'!!Presupuesto methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:14'!guardarPintor: pintorMinPresupuesto conValorMinimo: minimoPresupuesto	nombre:= pintorMinPresupuesto. 	valor := minimoPresupuesto.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:14'!valor	^ valor.! !!Presupuesto methodsFor: 'as yet unclassified' stamp: 'Fer 5/20/2020 00:14'!responsable 	^ nombre.! !